-- My work first 
-- followed by the given solution - Lab Solution

-- Retrieve all employees whose address is in Elgin,IL 
-- SELECT * FROM employees WHERE address LIKE '%Elgin,IL';
-- Lab Solution
-- SELECT F_NAME, L_NAME FROM employees WHERE address LIKE '%Elgin,IL%';

-- Retrieve all employees who were born during the 1970's.
-- SELECT *  FROM EMPLOYEES WHERE B_DATE   LIKE '197%';
-- Lab Solution
-- SELECT B_DATE, F_NAME, L_NAME  FROM EMPLOYEES WHERE B_DATE LIKE '197%';

-- Retrieve all employees in department 5 whose salary is between 60000 and 70000
-- SELECT * FROM employees WHERE salary BETWEEN 60000 AND 70000 AND DEP_ID LIKE '5' ;
-- SELECT * FROM employees WHERE  DEP_ID LIKE '5%;
-- SELECT * FROM employees WHERE  DEP_ID LIKE '%5%';
-- SELECT salary, dep_id FROM employees WHERE salary BETWEEN 60000 AND 70000 AND DEP_ID LIKE '5%' ;
-- Lab Solution
-- SELECT salary, dep_id FROM employees WHERE (SALARY BETWEEN 60000 AND 70000) AND DEP_ID = 5 ;

-- Retrieve a list of employees ordered by department ID.
-- SELECT * FROM employees ORDER BY DEP_ID;
-- Lab Solution
-- SELECT F_NAME, L_NAME, DEP_ID FROM employees ORDER BY DEP_ID;

-- Retrieve a list of employees ordered in descending order by department ID 
-- and within each department ordered alphabetically in descending order by last name.
-- SELECT F_NAME, L_NAME, DEP_ID FROM employees ORDER BY DEP_ID DESC;
-- SELECT F_NAME, L_NAME, DEP_ID FROM employees ORDER BY DEP_ID DESC, L_NAME;
-- Lab Solution
--SELECT F_NAME, L_NAME, DEP_ID FROM employees ORDER BY DEP_ID DESC, L_NAME DESC;
 
-- For each department ID retrieve the number of employees in the department.
-- SELECT dep_id, COUNT(*) FROM employees GROUP BY dep_id;
-- Lab Solution - same as mine
-- SELECT dep_id, COUNT(*) FROM employees GROUP BY dep_id;

-- For each department retrieve the number of employees in the department, 
-- and the average employees salary in the department.
-- SELECT dep_id, CAST(AVG (salary) as decimal(8,3)), COUNT(*) FROM employees GROUP BY dep_id;
-- Lab Solution - mine precision
-- SELECT dep_id, COUNT(*), AVG (salary) FROM employees GROUP BY dep_id;

-- Label the computed columns in the result set of Query 5B as “NUM_EMPLOYEES” and “AVG_SALARY”
-- SELECT dep_id, CAST(AVG (salary) as decimal(8,3)) AS AVG_SALARY, COUNT(*) AS NUM_EMPLOYEES FROM employees GROUP BY dep_id;
-- Lab Solution - mine precision
-- SELECT dep_id, COUNT(*) AS NUM_EMPLOYEES,  AVG(salary) AS AVG_SALARY FROM employees GROUP BY dep_id;

-- order the result set by Average Salary.
-- SELECT dep_id, CAST(AVG (salary) as decimal(8,3)) AS AVG_SALARY, COUNT(*) AS NUM_EMPLOYEES FROM employees GROUP BY dep_id ORDER BY AVG_SALARY;
-- Lab Solution - mine precision
-- SELECT dep_id, COUNT(*) AS NUM_EMPLOYEES, AVG(salary) AS AVG_SALARY  FROM employees GROUP BY dep_id ORDER BY AVG_SALARY;

-- limit the result to departments with fewer than 4 employees.
-- WHERE filters entire result set
-- HAVING filters result of grouping 
-- SELECT dep_id, CAST(AVG (salary) as decimal(8,3)) AS AVG_SALARY, COUNT(*) AS NUM_EMPLOYEES FROM employees 
-- GROUP BY dep_id HAVING COUNT(*) < 4 ORDER BY AVG_SALARY;
-- Lab Solution - mine precision
-- SELECT dep_id, COUNT(*) AS NUM_EMPLOYEES, AVG (salary) AS AVG_SALARY FROM employees GROUP BY dep_id HAVING COUNT(*) < 4 ORDER BY AVG_SALARY;

-- 4B
-- Retrieve a list of employees ordered in descending order by department ID 
-- and within each department ordered alphabetically in descending order by last name.
-- SELECT F_NAME, L_NAME, DEP_ID FROM employees ORDER BY DEP_ID DESC, L_NAME DESC

-- Similar to 4B but instead of department ID use department name. 
-- Retrieve a list of employees ordered by department name, and within each department ordered alphabetically in descending order by last name.

-- BONUS Query 6
-- SELECT empT.F_NAME, empT.L_NAME, empT.DEP_ID, deptT.dep_name FROM DEPARTMENTS deptT, EMPLOYEES empT ORDER BY deptT.dep_name DESC, empT.L_NAME DESC; 
-- Lab Solution - mine precision
SELECT deptT.dep_name, empT.F_NAME, empT.L_NAME FROM EMPLOYEES empT, DEPARTMENTS deptT ORDER BY deptT.dep_name, empT.L_NAME DESC; 

